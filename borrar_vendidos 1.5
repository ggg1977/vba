Option Explicit

Public cant_columnas As Integer

Public Sub borrar_vendidos()
  '------------------------------------------------------------------------
  ' DEFINICION DE VARIABLES
  '------------------------------------------------------------------------
  Dim i As Integer
  'Dim paginaBase As Worksheet
  Dim nom_libroBase As String
  Dim num_paginaBase As Integer
  'Dim paginaActualTxt As String
  Dim doc_col As Integer
  Dim nom_col As Integer
  Dim colTxt As String
  Dim textMesg As String
  Dim title As String
  Dim cuentaRegistrosDNI As Integer
  Dim cuentaRegistros As Integer
  Dim cuentaRegistrosTxt As String
  Dim dni_a_buscar As Long
  Dim rango As String
  Dim datosCliente As String
  Dim confirmacion As VbMsgBoxResult
  Dim textoPregunta As String
  Dim file_vendidos As FileDialog
  Dim qtb As QueryTable
  Dim dni_tbl As Worksheet
  Dim celdaActualCol As Integer
  Dim celdaActualFila As Integer
  Dim eliminados_log As String
  Dim errores_log As String
  'Dim hojaCopiados As Worksheet
  Dim dni_workbook As String
  Dim libroDeBase As String
  Dim dni_path As String
  Dim sheet1 As Worksheet
  Dim hojaDNI As Worksheet
  Dim dni_a_buscar_txt As String
  Dim encontrado As Range
  Dim nombreHoja As String
  Dim cuentaFilas As Integer
  Dim cuentaFilasTxt As String
  Dim finDeRegistros As Boolean
  Dim filasVacias As Integer
  Dim filasVaciasConsec As Integer
  Dim filasVaciasTxt As String
  Dim eliminado As Boolean
  Dim celdaRepetida As Range
  Dim valorBuscado As Long
  Dim cRepetidas As Range
  Dim cVacias As Range
  'Dim cVaciasConsec As Range
  Dim Filas As Integer
  Dim celdaDestino As Range
  Dim dniVendido As Range
  Dim stsusMessage As String
  Dim StatMsg As Variant
  Dim statusMessage As String
  Dim yesToAll As Boolean
  Dim respuestaYesToAll As VbMsgBoxResult
  Dim vecesPreguntado As Integer
  Dim cd As Integer ' cotador de celdaDestino (backup de registros)
  Dim respuestaAError As VbMsgBoxResult
  Dim valor_de_celda As String
  Dim col_doc_nro_encontrada As Boolean
  Dim col_nombre_encontrada As Boolean
  Dim limitePreguntado As Integer
  Dim MsgText As String
  Dim HojaVendidosCreada As Boolean
  Dim ultima_celda As Range
  Dim sh_dni As Worksheet
  Dim sh_base As Worksheet
  Dim celda_vacios_DNI As Range
  Dim celda_vacios_base As Range
  Dim celda_repetidos_DNI As Range
  Dim celda_repetidos_base As Range
  Dim celda_titulo_rep_DNI As Range
  Dim celda_titulo_vac_DNI As Range
  Dim celda_titulo_rep_base As Range
  Dim celda_titulo_vac_base As Range
  
  On Error GoTo ErrorHandler
  '------------------------------------------------------------------------
  ' CHEQUEA LA EXISTENCIA DE LA COLUMNA LLAMADA doc_nro
  '------------------------------------------------------------------------
  num_paginaBase = ActiveWorkbook.ActiveSheet.Index
  libroDeBase = ActiveWorkbook.Name
  
  'paginaBase = Worksheets(num_paginaBase)
  celdaActualCol = ActiveCell.Column
  celdaActualFila = ActiveCell.Row
  'Set sheet1 = Worksheets(paginaBase)
  'paginaActualTxt = paginaActual
  Application.ScreenUpdating = False
    
  Range("A1").Select
  While ActiveCell.Value <> ""
  'And (col_doc_nro_encontrada = False Or col_nombre_encontrada = False)
    If InStr(1, ActiveCell.Value, "dni") Or InStr(1, ActiveCell.Value, "doc_nro") Then
      doc_col = ActiveCell.Column
      col_doc_nro_encontrada = True
    End If
    
    If InStr(1, ActiveCell.Value, "nombre") Then
      nom_col = ActiveCell.Column
      col_nombre_encontrada = True
    End If
    
    'If col_doc_nro_encontrada = True And col_nombre_encontrada = True Then GoTo Columnas_encontradas
    
    ActiveCell.Offset(0, 1).Select
  Wend
  If col_doc_nro_encontrada = True And col_nombre_encontrada = True Then GoTo Columnas_encontradas
  If Not doc_col > 0 Then
    MsgText = "No se ha encontrado columna con n·mero de dni"
    GoTo EndLine
  End If
  If Not nom_col > 0 Then
    MsgText = MsgText + vbNewLine + "No se ha encontrado columna con nombre"
    GoTo EndLine
  End If
  MsgBox MsgText
Columnas_encontradas:
  cant_columnas = ActiveCell.Column - 1
  
  'MsgBox ("columnas:" & cant_columnas)
  
  '------------------------------------------------------------------------
  ' CREA HOJA DONDE COPIAR LOS DNI Y LLEVAR REGISTROS DE PROCESOS
  '------------------------------------------------------------------------
    
  If BuscarHoja("dni") = False Then
    Workbooks(libroDeBase).Sheets.Add(After:=Worksheets(num_paginaBase)).Name = "dni"
  Else
    Workbooks(libroDeBase).Sheets("dni").Cells.Clear
  End If
  Workbooks(libroDeBase).Sheets("dni").Activate
  
  Set celda_titulo_rep_DNI = Range("C1")
  Set celda_titulo_vac_DNI = Range("D1")
  Set celda_titulo_rep_base = Range("E1")
  Set celda_titulo_vac_base = Range("F1")
  
  celda_titulo_rep_DNI.Value = "Repetidas"
  celda_titulo_vac_DNI.Value = "Vacias"
  celda_titulo_rep_base.Value = "Repetidas en Base"
  celda_titulo_vac_base.Value = "Vacías en Base"
  
  celda_titulo_rep_DNI.ColumnWidth = 8
  celda_titulo_vac_DNI.ColumnWidth = 6
  celda_titulo_rep_base.ColumnWidth = 15
  celda_titulo_vac_base.ColumnWidth = 15
  
  Set celda_repetidos_DNI = Range("C2")
  Set celda_vacios_DNI = Range("D2")
  Set celda_repetidos_base = Range("E2")
  Set celda_vacios_base = Range("F2")
    
  '------------------------------------------------------------------------
  ' ABRE ARCHIVO QUE CONTIENE LOS NROS DE DNI DE VENTAS
  '------------------------------------------------------------------------
  
  'Application.ScreenUpdating = False
  dni_path = Application.GetOpenFilename
  If Not dni_path = "Falso" Then
    Workbooks.Open Filename:=dni_path
  Else
    GoTo EndLine
  End If
  dni_workbook = ActiveWorkbook.Name
 
  '------------------------------------------------------------------------
  ' COPIA EL CONTENIDO DEL DOCUMENTO SELECCIONADO A LA PÁGINA 2
  '------------------------------------------------------------------------
  
  cuentaRegistrosDNI = contadorDeFilas(1)
  If cuentaRegistrosDNI = 0 Then
    MsgBox "No se encontraron resultados"
    GoTo EndLine
  End If
  
  cuentaRegistrosTxt = cuentaRegistrosDNI
  cuentaFilas = cuentaRegistrosDNI
  cuentaFilasTxt = cuentaFilas
  rango = "A1:A" + cuentaFilasTxt
  Range(rango).Select
  Selection.Copy
  
  Workbooks(libroDeBase).Activate
  Worksheets("dni").Activate
  Range("A1").Select
  ActiveSheet.Paste
  
  '------------------------------------------------------------------------
  ' CIERRA ARCHIVO
  '------------------------------------------------------------------------
  Application.DisplayAlerts = False
  Workbooks(dni_workbook).Close SaveChanges:=False
  
  '------------------------------------------------------------------------
  ' REVISA LA EXISTENCIA DE ELEMENTOS DUPLICADOS Y FILAS VACIAS Y LOS ELIMINA
  '------------------------------------------------------------------------

  Set sh_base = Sheets(num_paginaBase)
  Set sh_dni = Worksheets("dni")
  
  
  cuentaRegistrosDNI = borra_duplicados(sh_dni, 1, sh_dni, celda_repetidos_DNI, celda_vacios_DNI)
  'MsgBox cuentaRegistrosDNI
  cuentaRegistros = borra_duplicados(sh_base, doc_col, sh_dni, celda_repetidos_base, celda_vacios_base)
  'MsgBox cuentaRegistros
  '------------------------------------------------------------------------
  ' REVISA LA EXISTENCIA DE ELEMENTOS EN BASE DE DATOS
  '------------------------------------------------------------------------
  Filas = cuentaRegistros
  'MsgBox Filas
'  If Filas = False Then
'    Workbooks(libroDeBase).Sheets(num_paginaBase).Activate
'    Filas = cuentaRegistros
'    'contadorDeFilas(doc_col)
'  End If
  
  For i = 1 To cuentaRegistrosDNI
    If Worksheets("dni").Range("E2").Value > 0 Then
      statusMessage = i & " de " & cuentaRegistrosDNI & " registros procesados, " & Worksheets("dni").Range("G2").Value & " Eliminados."
    Else
      statusMessage = i & " de " & cuentaRegistrosDNI & " registros procesados." & Worksheets("dni").Range("G2").Value & " Eliminados."
    End If
    Application.StatusBar = statusMessage
    'StatMsg = ProgressBar.update_progbar(i / cuentaRegistros, statusMessage)
    'If ProgressBar.CancelButton.Cancel Then GoTo EndLine
    If Worksheets("dni").Cells(i, 1).Value = "dni" Then i = i + 1
    If Worksheets("dni").Cells(i, 1).Font.Color = RGB(255, 0, 0) Then GoTo Dont_Delete
    
    Set dniVendido = Worksheets("dni").Cells(i, 1)
    
    
    dni_a_buscar = dniVendido.Value
    Set encontrado = Nothing
    'On Error GoTo usarFuncionBuscarCliente
    On Error GoTo ErrorHandler
    Set encontrado = Worksheets(num_paginaBase).Range(Worksheets(num_paginaBase).Cells(2, doc_col), Worksheets(num_paginaBase).Cells(Filas, doc_col)).Find(What:=dni_a_buscar)
    
    'GoTo noUsarFuncionBuscarCliente
usarFuncionBuscarCliente:
    'If encontrado Is Nothing Then
      'Set encontrado = buscarCliente(dni_a_buscar, 2, doc_col, num_paginaBase)
    'End If
noUsarFuncionBuscarCliente:
    
    If Not encontrado Is Nothing Then
      If respuestaYesToAll = False Then
        If vecesPreguntado > 1 Then
          respuestaYesToAll = MsgBox("¿Desea Eliminar Todos los siguientes?" & vbNewLine & "(una vez iniciado no se puede cancelar)", vbYesNo, "¿Eliminar todos?")
          If respuestaYesToAll = vbYes Then yesToAll = True Else limitePreguntado = 10
        End If
      End If

      If respuestaYesToAll = vbNo Then
        If vecesPreguntado > limitePreguntado Then
          vecesPreguntado = 0
          respuestaYesToAll = MsgBox("Hay muchos repetidos por eso vuelvo a preguntar" & vbNewLine & "¿Desea Eliminar Todos los siguientes?" & vbNewLine & "(una vez iniciado no se puede cancelar)", vbYesNo, "¿Eliminar todos?")
          If respuestaYesToAll = vbYes Then yesToAll = True
        End If
      End If
      vecesPreguntado = vecesPreguntado + 1
      Worksheets(num_paginaBase).Activate
      
      encontrado.Select
      If col_nombre_encontrada Then
        datosCliente = Cells(encontrado.Row, nom_col)
      Else
        datosCliente = Cells(encontrado.Row, 1).Value + " " + Cells(encontrado.Row, 2).Value
      End If
      textoPregunta = "desea eliminar a: " + datosCliente + "?"
      If yesToAll = False Then confirmacion = MsgBox(textoPregunta, vbYesNoCancel, "Confirma Eliminación")
      If confirmacion = vbCancel Then
        GoTo EndLine
      ElseIf confirmacion = vbNo Then
        GoTo Dont_Delete
      Else
        '------------------------------------------------------------------------
        ' CREA HOJA DE BACKUP
        '------------------------------------------------------------------------
        'If Workbooks(libroDeBase).Sheets("vendidos") Is Nothing Then
        
        If HojaVendidosCreada = False And BuscarHoja("vendidos") = False Then
          
            Workbooks(libroDeBase).Sheets.Add(After:=Worksheets("dni")).Name = "vendidos"
            HojaVendidosCreada = True
            Workbooks(libroDeBase).Sheets(num_paginaBase).Activate
            ultima_celda = Range(Cells(1, cant_columnas))
            Range("A1", ultima_celda).Select
            Selection.Copy
            Workbooks(libroDeBase).Sheets("vendidos").Activate
            ActiveSheet.Paste
          'End If
        End If
        '------------------------------------------------------------------------
        ' COPIA LA INFORMACION QUE SE VA A BORRAR
        '------------------------------------------------------------------------
        
        'Worksheets("vendidos").Activate
        If celdaDestino Is Nothing Then
          cd = 2
          'Range("A2").Select
        
          While Workbooks(libroDeBase).Sheets("vendidos").Cells(cd, 1).Value <> ""
            cd = cd + 1
          Wend
          Set celdaDestino = Worksheets("vendidos").Cells(cd, 1)
        Else
          'Set celdaDestino = Cells(celdaDestino.Row + 1, 1)
          Set celdaDestino = celdaDestino.Offset(1, 0)
        End If
        
        Workbooks(libroDeBase).Sheets(num_paginaBase).Activate
        Range(Cells(encontrado.Row, 1), Cells(encontrado.Row, 36)).Select
        Selection.Copy
        
        Workbooks(libroDeBase).Sheets("vendidos").Activate
        celdaDestino.Select
        ActiveSheet.Paste
        '------------------------------------------------------------------------
        ' ELIMINA LA INFORMACION
        '------------------------------------------------------------------------
        Workbooks(libroDeBase).Sheets(num_paginaBase).Rows(encontrado.Row).EntireRow.Delete
        Workbooks(libroDeBase).Sheets("dni").Activate
        dniVendido.Font.Color = RGB(255, 0, 0)
        eliminados_log = eliminados_log + vbNewLine + datosCliente
        
        If Workbooks(libroDeBase).Sheets("dni").Range("G1").Value = False Then
          Workbooks(libroDeBase).Sheets("dni").Range("G1").Value = "Eliminados"
          Workbooks(libroDeBase).Sheets("dni").Range("G2").Value = 1
        Else
          Workbooks(libroDeBase).Sheets("dni").Range("G2").Value = Worksheets("dni").Range("G2").Value + 1
        End If
      End If
    Else
      dni_a_buscar_txt = dni_a_buscar
      errores_log = errores_log + vbNewLine + dni_a_buscar_txt + " No encontrado"
    End If
    Set encontrado = Nothing
    
Dont_Delete:
  Next i
  Application.StatusBar = False
  'Unload ProgressBar
  
  If Workbooks(libroDeBase).Sheets("dni").Range("G2").Value > 0 Then
    MsgBox "Eliminados: " + Workbooks(libroDeBase).Sheets("dni").Range("G2").Value  ' + vbNewLine + "Errores: " + errores_log
  Else
    MsgBox "No se encontraron registros que eliminar"
  End If
  GoTo EndLine
  
ErrorHandler:
  'If Err.Number = 1004 Then
   'Err.Clear
    'GoTo usarFuncionBuscarCliente
  'End If
  respuestaAError = MsgBox("Ha ocurrido un error: " & Err.Description & vbNewLine & Err.Source, vbAbortRetryIgnore, "Error: " & Err.Number)
  If respuestaAError = vbRetry Then
    Err.Clear
    Resume usarFuncionBuscarCliente
  End If
  If respuestaAError = vbIgnore Then
    Err.Clear
    Resume
  End If
  If respuestaAError = vbCancel Then
    Err.Clear
    Resume EndLine
  End If
  
  
EndLine:
  Application.StatusBar = False
  'Unload ProgressBar
  'MsgBox "Programa terminado"
  Application.ScreenUpdating = True
  
  
End Sub

Function BuscarHoja(nombreHoja As String) As Boolean
Dim i As Integer
  For i = 1 To Worksheets.Count
    If ActiveWorkbook.Sheets(i).Name = nombreHoja Then
      BuscarHoja = True
      Exit Function
    End If
  Next
  
  BuscarHoja = False
End Function

Function buscarCliente(dni_num As Long, inicio_de_busqueda As Integer, columna_de_busqueda As Integer, paginaBusqueda As Integer) As Range
  
  Dim fila_resultado As Integer
  
  Dim fin_de_registro As Boolean
  Dim fila_actual As Integer
  Dim celda_actual As Range
  Dim filasVaciasConsec As Integer
  
  Application.ScreenUpdating = False
  
  fin_de_registro = False
  fila_actual = inicio_de_busqueda
  ActiveWorkbook.Sheets(paginaBusqueda).Activate
  
  ActiveSheet.Cells(inicio_de_busqueda, columna_de_busqueda).Select
  While Not fin_de_registro = True
    If ActiveCell.Value <> "" Then
      If dni_num = ActiveCell.Value Then
      'If InStr(1, ActiveCell.Value, dni_num, 1) Then
        Set buscarCliente = ActiveCell
        Exit Function
      End If
      filasVaciasConsec = 0
    Else
      filasVaciasConsec = filasVaciasConsec + 1
    End If
    If filasVaciasConsec > 9 Then fin_de_registro = True
    
    ActiveCell.Offset(1, 0).Select
  Wend
    

End Function

Function contadorDeFilas(col As Integer)
  Dim filasVacias As Integer
  Dim filasVaciasConsec As Integer
  Dim cuentaRegistros As Integer
  Dim Filas As Integer
  Dim fin_de_registro As Boolean
  Dim i As Integer
  
  i = 1
  
  Application.ScreenUpdating = False
  
  'ActiveSheet.Cells(1, col).Select
  While Not fin_de_registro = True
    'If ActiveCell.Value <> "" Then
    If Cells(i, col).Value <> "" Then
      cuentaRegistros = cuentaRegistros + 1
      filasVaciasConsec = 0
    Else
      filasVacias = filasVacias + 1
      filasVaciasConsec = filasVaciasConsec + 1
    End If
    If filasVaciasConsec > 9 Then fin_de_registro = True
    'ActiveCell.Offset(1, 0).Select
    i = i + 1
  Wend
  contadorDeFilas = cuentaRegistros + filasVacias - filasVaciasConsec
End Function

Function borra_duplicados(hoja_de_busqueda As Worksheet, columna As Integer, hoja_registros As Worksheet, celda_reg As Range, celda_vac As Range)

  Dim cuentaFilas As Integer
  Dim cantidad_de_columnas As Integer
  Dim i As Integer
  Dim eliminado As Boolean
  Dim val_Buscado As Double
  Dim cuentaRegistros As Integer
  Dim desde As Range, hasta As Range
  Dim posicionActal As Range, col_actual As Integer, fila_actual As Integer

  If hoja_de_busqueda.Name = "dni" Then cantidad_de_columnas = 1 Else cantidad_de_columnas = cant_columnas
  Worksheets(hoja_de_busqueda.Index).Activate
  Application.StatusBar = "Trabajando, sea paciente..."
  ActiveSheet.Cells(1, columna).Select
  cuentaFilas = contadorDeFilas(columna)
  'cuentaRegistros = cuentaFilas
  Set desde = Cells(1, columna)
  Set hasta = Cells(cuentaFilas, columna)
  col_actual = ActiveCell.Column
  fila_actual = ActiveCell.Row
  Set posicionActual = Cells(fila_actual, col_actual)
  For i = 1 To cuentaFilas
    If ActiveCell.Row > (cuentaFilas - (celda_vac.Value + celda_reg.Value)) Then GoTo procesoCompletado

    eliminado = False
    If ActiveCell.Value <> "" Then
    
      If Not IsNumeric(ActiveCell.Value) Then
        ActiveCell.Value = Replace(ActiveCell.Value, " ", "")
        ActiveCell.Value = Replace(ActiveCell.Value, ",", "")
        ActiveCell.Value = Replace(ActiveCell.Value, ".", "")
      End If
      If Not IsNumeric(ActiveCell.Value) Then
        ActiveCell.Offset(1, 0).Select
      Else
        ActiveCell.Value = Replace(ActiveCell.Value, " ", "")
        val_Buscado = ActiveCell.Value
      End If
      If WorksheetFunction.CountIf(Range(desde, hasta), val_Buscado) > 1 Then
        If cantidad_de_columnas > 1 Then
          ActiveCell.EntireRow.Delete
        Else
          ActiveCell.Delete
        End If
        
        eliminado = True
        If ActiveSheet.Index <> hoja_registros.Index Then
          Worksheets(hoja_registros.Index).Activate
        End If
        
        celda_reg.Value = celda_reg.Value + 1
        
        If ActiveSheet.Index <> hoja_de_busqueda.Index Then
          Worksheets(hoja_de_busqueda.Index).Activate
        End If
      End If
    Else
      MsgBox "i: " & i & "totalFilas: " & cuentaFilas & ", vacias: " & celda_vac.Value & ", reg: " & celda_reg.Value
      If verificaFila(cantidad_de_columnas) Then
        
        ActiveCell.EntireRow.Delete
        celda_vac.Value = celda_vac.Value + 1
        eliminado = True
      End If
      
    End If
    If eliminado = False Then ActiveCell.Offset(1, 0).Select
    'textMesg = textMesg + vbNewLine + "Registro encontrado Nº" + ActiveCell.Value
  Next i
procesoCompletado:
'MsgBox "i: " & i & "totalFilas: " & cuentaFilas & ", vacias: " & celda_vac.Value & ", reg: " & celda_reg.Value
  borra_duplicados = contadorDeFilas(columna)
  
  posicionActual.Select
End Function

Function verificaFila(cantidad_columnas As Integer)
  Dim fila_vacia As Boolean, i As Integer, posicionActual As Range
  Dim col_actual As Integer, fila_actual As Integer
  col_actual = ActiveCell.Column
  fila_actual = ActiveCell.Row
  'MsgBox fila_actual & "," & col_actual
  Set posicionActual = Cells(fila_actual, col_actual)
  fila_vacia = True
  For i = 1 To cantidad_columnas
    Cells(ActiveCell.Row, 1).Select
    If ActiveCell.Value = "" Then
      ActiveCell.Offset(0, 1).Select
    Else: fila_vacia = False
    End If
  Next i
  posicionActual.Select
  verificaFila = fila_vacia
End Function
